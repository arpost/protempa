<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="protempaConfiguration">
        <xs:annotation>
            <xs:documentation>Describes a configuration of Protempa</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="dataOutputFile" type="filePathType">
                    <xs:annotation>
                        <xs:documentation>Identifies the data file to be written by Protempa.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="explanationOutputFile" type="filePathType">
                    <xs:annotation>
                        <xs:documentation>Identifies a file to be output that explains why a protempa run did what it did.  The contents of the identified file should conform to this schema.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="protempaQuery">
                    <xs:annotation>
                        <xs:documentation>The query that will drive drive a Protempa run.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="relationalDBBackend">
                    <xs:annotation>
                        <xs:documentation>A description of the data source that Protempa should use.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="tableQueryResultsHandler"> </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="tableQueryResultsHandler">
        <xs:annotation>
            <xs:documentation>A description of how to transform a graph of propositions that are all associated with the same key ID to character-delimited records with a fixed and specified set of fields.
</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="rowPropositionIDs">
                    <xs:annotation>
                        <xs:documentation>The proposition IDs that this contain are the names of propositions that may be in a graph that is passed to the enclosing tableQueryResultsHandler.  The tableQueryResultsHandler will output a row for each proposition it finds in the graph with the given name.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="propositionID"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="tableColumnSpecs">
                    <xs:annotation>
                        <xs:documentation>Each of the elements that this element contains describes one or more fields in the output.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="atLeastNColumnSpec">
                                <xs:annotation>
                                    <xs:documentation>Counts the number of instances of a proposition found through the given links and outputs a true value if there are at least n occurrences of the named proposition; otherwise outputs a false value.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element ref="links"/>
                                    </xs:sequence>
                                    <xs:attribute ref="columnNameOverride">
                                        <xs:annotation>
                                            <xs:documentation>The column header to use.  If not specified, a default computed from the specified links is used.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="n" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The value that is to be compared to the count of propositions found.  If the actual count of propositions is equal to or greater than this value, then a true value is output.</xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:int">
                                                <xs:minInclusive value="1"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                    <xs:attribute ref="trueOutput">
                                        <xs:annotation>
                                            <xs:documentation>The string to put in the field to represent a true output.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute ref="falseOutput">
                                        <xs:annotation>
                                            <xs:documentation>The string to put in the field to represent a false output.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="countColumnSpec">
                                <xs:annotation>
                                    <xs:documentation>Describes a column that contains a count of the instances of a proposition that are found through the given links.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element ref="links"/>
                                    </xs:sequence>
                                    <xs:attribute ref="columnNameOverride">
                                        <xs:annotation>
                                            <xs:documentation>The column header to use.  If not specified, a default computed from the specified links is used.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="countUnique" type="xs:boolean"
                                        use="required">
                                        <xs:annotation>
                                            <xs:documentation>If the value of this attribute is false, then the count produced for the described column will be the total number of propositions found through the given links.

If the value of this attribute is true, then the count produced for te described column sill be the number of distinct proposition IDs in the propositions found through the given links.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="distanceBetweenColumnSpec">
                                <xs:annotation>
                                    <xs:documentation>Outputs the temporal distance between propositions from finish to start using the specified unit of time.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element ref="links"/>
                                    </xs:sequence>
                                    <xs:attribute ref="columnNamePrefixOverride"/>
                                    <xs:attribute ref="unit"/>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="propositionColumnSpec">
                                <xs:annotation>
                                    <xs:documentation>Describes output columns for named properties of properties found through the given links.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="propertyNames">
                                            <xs:annotation>
                                                <xs:documentation>The names of proposition's properties that will have output columns.</xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element maxOccurs="unbounded"
                                                  name="propertyName" type="nameType"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="outputConfig">
                                            <xs:annotation>
                                                <xs:documentation>Specifies additional columns to be output related to propositions.</xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:attribute default="false" name="showId"
                                                  type="xs:boolean" use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition IDs.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false" name="showValue"
                                                  type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition values.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false" name="showDisplayName"
                                                  type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition display names.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false"
                                                  name="showAbbrevDisplayName" type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition abbreviated display names.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false"
                                                  name="showStartOrTimestamp" type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition start time or timestamp.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false" name="showFinish"
                                                  type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition finish time.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false" name="showLength"
                                                  type="xs:boolean">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition interval length.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="" name="valueHeading"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show proposition value.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="" name="displayNameHeading"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the display name column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default=""
                                                  name="abbrevDisplayNameHeading" type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the abbrev display name column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default=""
                                                  name="startOrTimestampHeading" type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the start time or timestamp column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="" name="finishHeading"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the finish time column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="" name="lengthHeading"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the length column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="valueOutputConfig">
                                            <xs:annotation>
                                                <xs:documentation>Specifies additional columns to output related to properties.</xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:attribute default="false"
                                                  name="showPropertyValueDisplayName"
                                                  type="xs:boolean" use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show propery value display name.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default="false"
                                                  name="showPropertyValueAbbrevDisplayName"
                                                  type="xs:boolean" use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>If true, output a column to show propery value abbreviated display name.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default=""
                                                  name="propertyValueDisplayName" type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the property value display name column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute default=""
                                                  name="propertyValueAbbrevDisplayName"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The string to use for the heading of the property value abbreviated display name column.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element minOccurs="0" ref="links"/>
                                    </xs:sequence>
                                    <xs:attribute ref="columnNamePrefixOverride"/>
                                    <xs:attribute name="numInstances" type="xs:int" default="1">
                                        <xs:annotation>
                                            <xs:documentation>To accomodate multiple propositions with the same proposition ID, specify this attribute for multiple columns with the same name.  If this propositionColumnSpec would otherwise specify multiple columns with different names, specifying a value for this attribute will specify that many sets of the differently named columns.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="propositionValueColumnSpec">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element ref="links"/>
                                    </xs:sequence>
                                    <xs:attribute ref="columnNamePrefixOverride"/>
                                    <xs:attribute name="aggregationType" use="required">
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token">
                                                <xs:enumeration value="max"/>
                                                <xs:enumeration value="min"/>
                                                <xs:enumeration value="first"/>
                                                <xs:enumeration value="last"/>
                                                <xs:enumeration value="sum"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="columnDelimiter">
                <xs:annotation>
                    <xs:documentation>The character to use to separate fields in records of the output file.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:length value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="headerWritten" type="xs:boolean" use="prohibited">
                <xs:annotation>
                    <xs:documentation>This attribute represents a feature that may not be currently supported.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="links">
        <xs:annotation>
            <xs:documentation>One or more links to be traversed</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="derivation">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="propositionIDs"/>
                            <xs:element minOccurs="0" ref="propertyConstraints">
                                <xs:annotation>
                                    <xs:documentation>Contains one or more elements that use the values of proposition's properties to constrain which properties can be found through the enclosing deriviation.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="allowedValues">
                                <xs:annotation>
                                    <xs:documentation>Constrain the propositions found through the enclosing derivation to those having a value explicitly in one of this element's children.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:group ref="valueListGroup"/>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="relation">
                                <xs:annotation>
                                    <xs:documentation>A representation of the temporal relationship between two intervals.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" name="minDistanceBetweenStarts"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The minimum distance between the starts of intervals.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="maxDistanceBetweenStarts"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The maximum distance between the starts of intervals.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="minSpan" type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The minimum distance between the start of interval 1 and the finish of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="maxSpan" type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The maximum distance between the start of interval 1 and the finish of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="minDistanceBetween"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The minimum distance between the finish of interval 1 and the start of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="maxDistanceBetween"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The maximum distance between the finish of interval 1 and the start of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="minDistanceBetweenFinishes"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The minimum distance between the finish of interval 1 and the finish of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="maxDistanceBetweenFinishes"
                                            type="durationType">
                                            <xs:annotation>
                                                <xs:documentation>The maximum distance between the finish of interval 1 and the finish of interval 2.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="behavior" use="required">
                            <xs:simpleType>
                                <xs:restriction base="xs:token">
                                    <xs:enumeration value="singleForward"/>
                                    <xs:enumeration value="singleBackward"/>
                                    <xs:enumeration value="multForward"/>
                                    <xs:enumeration value="multBackward"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute default="-1" name="fromIndex" type="xs:int"/>
                        <xs:attribute default="-1" name="toIndex" type="xs:int"/>
                        <xs:attribute ref="propositionComparitor"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="reference">
                    <xs:annotation>
                        <xs:documentation>Specifies reference traversals from one proposition to other propositions.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element minOccurs="0" name="referenceNames">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element maxOccurs="unbounded" name="referenceName"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <xs:element minOccurs="0" ref="propositionIDs"/>
                            <xs:element minOccurs="0" ref="propertyConstraints">
                                <xs:annotation>
                                    <xs:documentation>Contains one or more elements that use the values of proposition's properties to constrain which properties can be found through the enclosing reference.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute default="-1" name="fromIndex" type="xs:int"/>
                        <xs:attribute default="-1" name="toIndex" type="xs:int"/>
                        <xs:attribute ref="propositionComparitor"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="relationalDBBackend">
        <xs:annotation>
            <xs:documentation>Describes a relational database data source.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="constantSpecs">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" ref="entitySpec"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="eventSpecs">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" ref="entitySpec"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="primitiveParameterSpecs">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" ref="entitySpec"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="sqlGenerator" type="javaClassNameType">
                <xs:annotation>
                    <xs:documentation>The name of the class used to generate SQL</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="databaseID" use="required">
                <xs:annotation>
                    <xs:documentation>A string that identifies the database that will be used for the data source.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute ref="schemaName" use="required">
                <xs:annotation>
                    <xs:documentation>The name of the schema from which the back end will get data.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keyIdSchema" type="nameType">
                <xs:annotation>
                    <xs:documentation>The schema that contains the table named by the keyIdTable attrib ute.  If not specified, defaults to the value of schemaName.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keyIdTable" type="nameType" use="required">
                <xs:annotation>
                    <xs:documentation>When the query does not specify a set of key ID values, they set of key IDs to be queried will come from this table.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="keyIdColumn" type="nameType" use="required">
                <xs:annotation>
                    <xs:documentation>When the query does not specify a set of key ID values, they set of key IDs to be queried will come from this column of the table named by the keyIdTable attribute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="entitySpec">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">A description of the enclosing entitySpec.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="propositionIDs">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">The names of the propositions to which the enclosing entitySpec applies. The propositions must all have the same properties (not enforable by this schema).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="baseSpec" type="baseSpecType">
                    <xs:annotation>
                        <xs:documentation>Represents the path through the datbase from the key's main table to this entity's main table.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="uniqueIdSpec" type="columnSpecType">
                    <xs:annotation>
                        <xs:documentation>Represents the paths through the database from this entity's main table to the tables and columns that together form a unique identifier for this entity. The columns comprising the unique identifier cannot have null values.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element maxOccurs="1" minOccurs="0" name="startTimeOrTimestampSpec"
                    type="columnSpecType">
                    <xs:annotation>
                        <xs:documentation>Represents the path through the database from the key's main table to the table and column where the entity's start time (or timestamp is no finishTimeSpec is specified) is located.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="finishTimeSpec" type="columnSpecType">
                    <xs:annotation>
                        <xs:documentation>Represents the path through the database from the key's main table to the table and column where the entity's finish time.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="propertySpecs">
                    <xs:annotation>
                        <xs:documentation>Defines the entity's properties, which should be the same as the properties of all the propositions identified by the propositionIDs element.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="propertySpec">
                                <xs:annotation>
                                    <xs:documentation>Define an entity's propery and how the property is stored in a relational database.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" ref="codeToPropositionIdMap"/>
                                        <xs:element maxOccurs="1" minOccurs="1" ref="codeSpec">
                                            <xs:annotation>
                                                <xs:documentation>Represents the path through the database from the enclosing entity's main table to the table and column where the entity's code is located.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                    </xs:sequence>
                                    <xs:attribute ref="name" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The name of this property.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute ref="typeOfValue" use="required">
                                        <xs:annotation>
                                            <xs:documentation>This property's type of value.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" ref="codeToPropositionIdMap"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="codeSpec">
                    <xs:annotation>
                        <xs:documentation>Represents the path through the database from the enclosing entity's main table to the table and column where the entity's code is located.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element maxOccurs="1" minOccurs="0" name="constraintSpecs ">
                    <xs:annotation>
                        <xs:documentation>Paths from this instance's main table to another table and column whose value is added to a where clause to constrain which rows in the database are members of this entity.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="constraintSpec"
                                type="columnSpecType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute ref="name" use="required">
                <xs:annotation>
                    <xs:documentation xml:lang="en">The name of this entitySpec.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="unique" type="xs:boolean" use="required">
                <xs:annotation>
                    <xs:documentation>True if every row in the database table specified by the baseSpec element contains a unique instance of this entity, false otherwise.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute ref="typeOfValue">
                <xs:annotation>
                    <xs:documentation>If the described entity has a value, this attribute specifies the type of value.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="granularity" type="granularityType" use="required">
                <xs:annotation>
                    <xs:documentation>The granularity (year, month, ...) with which to interpret this entity's start and finish times.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="parser">
                <xs:annotation>
                    <xs:documentation>Indicates whether the database values for this entity's start and finish should be parsed as date values or datetime values.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="date"/>
                        <xs:enumeration value="dateTime"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="partitionBy" type="granularityType">
                <xs:annotation>
                    <xs:documentation>A hint to the relational data source backend to partition queries for this entity spec by the given Unit. For example, if a time unit of MONTH is specified, the backend may only query data one month at a time. In order for this to work, at least one org.protempa.dsb.filter.PositionFilter must be specified that defines both upper and lower bounds on the same side of a proposition's intervals. If multiple position filters are specified, then one of these will be used to partition queries (which one is undefined!).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="description" nillable="true" type="xs:string">
        <xs:annotation>
            <xs:documentation>Contains a free-form textual description of something.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="protempaQuery">
        <xs:annotation>
            <xs:documentation xml:lang="en">Top-level element for describing a Protempa query.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="dataSourceBackend" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Describes the data source back end.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute ref="javaClass">
                            <xs:annotation>
                                <xs:documentation xml:lang="en">The name of the class to used for the data source back end.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element name="knowledgeSourceBackend" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Describes the remote knowledge source back end.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute ref="javaClass">
                            <xs:annotation>
                                <xs:documentation xml:lang="en">The name of the class to use for the remote knowledge source back end.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="algorithmSourceBackend">
                    <xs:annotation>
                        <xs:documentation>Describes the algorithmic back end.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute ref="javaClass">
                            <xs:annotation>
                                <xs:documentation xml:lang="en">The name of the class to use for the algorithmic back end.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="termSourceBackend">
                    <xs:annotation>
                        <xs:documentation>Describes the term source backend.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute ref="javaClass">
                            <xs:annotation>
                                <xs:documentation xml:lang="en">The name of the class to use for the term source back end.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="keyIDs" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>If present, restricts a query to consider only sets of propositions from the database back end that are associated with one of the key IDs contined by this element.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="propositionIDs">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">The query will match each set of propositions that is returned by the back end and accepted by the filters against the propositions named by the elements contained by this element.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="filters" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>If present, the filters that this element contains are used to filters that sets of propositions that are read from the back end.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="termIDs">
                    <xs:annotation>
                        <xs:documentation>Not currently used.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="and">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element maxOccurs="unbounded" name="termID"
                                            type="nameType"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="keyIDs">
        <xs:annotation>
            <xs:documentation>A collection of one or more keyIds.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="keyId" type="nameType">
                    <xs:annotation>
                        <xs:documentation>This element contains a string that identifes the entity associated with a set of propositions.  For example, key IDs may identify the patient that is associated with a set of propositions.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="filters">
        <xs:annotation>
            <xs:documentation>A collection of one or more filters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice maxOccurs="unbounded" minOccurs="1">
                <xs:element name="dateTimeFilter" minOccurs="1" type="dateTimeFilterType">
                    <xs:annotation>
                        <xs:documentation>Filter for a date/time range</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="positionFilter" type="positionFilterType"/>
                <xs:element name="propertyValueFilter" type="propertyValueFilterType"> </xs:element>
                <xs:element name="propertyValuesFilter" type="propertyValuesFilterType">
                </xs:element>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="propositionIDs">
        <xs:annotation>
            <xs:documentation>A collection of one or more propositionID elements.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="propositionID" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="propositionID" type="propositionIdType">
        <xs:annotation>
            <xs:documentation>The value of this element is a string that identifies a proposition in the ontology.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="propertyConstraints">
        <xs:annotation>
            <xs:documentation>Contains one or more elements that use the values of proposition's properties to constrain which properties can be found through the enclosing deriviation or reference.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="propertyConstraint">
                    <xs:annotation>
                        <xs:documentation>This element describe a constraint on which propositions are found by the enclosing derivation or reference by comparing a property of the propositions to a single value.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="valueGroup"/>
                        </xs:sequence>
                        <xs:attribute ref="propertyName" use="required">
                            <xs:annotation>
                                <xs:documentation>The name of the property to be compared.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="comparitor" type="comparitorType"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="propertyConstraintValueList">
                    <xs:annotation>
                        <xs:documentation>This element describe a constraint on which propositions are found by the enclosing derivation or reference by comparing a property of the propositions to a list of values.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:group ref="valueListGroup"/>
                        <xs:attribute ref="propertyName"/>
                        <xs:attribute name="comparitor" type="listComparitorType"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="codeSpec" type="columnSpecType">
        <xs:annotation>
            <xs:documentation>Represents the path through the database from the enclosing entity's main table to the table and column where the code is located.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="codeToPropositionIdMap">
        <xs:annotation>
            <xs:documentation>A one-to-one map from code to proposition ID. If a mapping for a code is not specified, it is assume that the code in the datbase is the same as the proposition ID.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="codeToPropositionID">
                    <xs:annotation>
                        <xs:documentation>A mapping from one code to one proposition ID</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:attribute ref="code">
                            <xs:annotation>
                                <xs:documentation>The code to map.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute ref="propositionID">
                            <xs:annotation>
                                <xs:documentation>The proposition ID the code is mapped to.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="booleanValue" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>The value of this element is a literal boolean value.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="dateValue" type="xs:date">
        <xs:annotation>
            <xs:documentation>The value of this element is a literal date value.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="nominalValue" type="nameType">
        <xs:annotation>
            <xs:documentation>The value of this element is a literal nominal value.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="numberValue" nillable="false" type="xs:decimal">
        <xs:annotation>
            <xs:documentation>The value fo this element is a literal number value.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="incomparableNumberValue">
        <xs:annotation>
            <xs:documentation>The value of this element represents a test result outside of the reportable range of the test and thus is reported prefixed with a greater than or less than sign.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
                <xs:pattern value="[&lt;>][+-]?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:attribute name="typeOfValue">
        <xs:annotation>
            <xs:documentation>Indicates the type of value associated with something. Possible values are

booleanValue
A value that is either true or false

dateValue
A value that contains date and and time information.  A separate but related element may contian precision information to indicate the the precision of a date value is year, month, ..., minute, second.

inequalityNumberValue
The is an extension of numberValue. It allows numbers to be followed by a greater-than or less-than sign to indicate a measurement that was out of range and is just know to be greater or less than the stated value..

nominalValue
The name of an enumerated value

numberValue
an possibly signed decimal number.  The decimal point is optional for integral values.

valueList
A list of values
</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:token">
                <xs:enumeration value="booleanValue"/>
                <xs:enumeration value="dateValue"/>
                <xs:enumeration value="inequalityNumberValue"/>
                <xs:enumeration value="nominalValue"/>
                <xs:enumeration value="numberValue"/>
                <xs:enumeration value="valueList"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" type="nameType">
        <xs:annotation>
            <xs:documentation>The name of something</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="javaClass" type="javaClassNameType">
        <xs:annotation>
            <xs:documentation>The fully qualified name of a Java class.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="propertyName" type="nameType">
        <xs:annotation>
            <xs:documentation>The name of a property.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="schemaName" type="nameType">
        <xs:annotation>
            <xs:documentation>The name of a relational database schema.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="tableName" type="nameType">
        <xs:annotation>
            <xs:documentation>The name of a table in a relational database.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="columnName" type="javaClassNameType">
        <xs:annotation>
            <xs:documentation>The name of a column in a relational database table.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="code" type="xs:string">
        <xs:annotation>
            <xs:documentation>A code in the database that may be equivalent to a proposition ID.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="propositionID" type="propositionIdType">
        <xs:annotation>
            <xs:documentation>A proposition ID.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="columnNameOverride" type="nameType"/>
    <xs:attribute name="columnNamePrefixOverride" type="nameType"/>
    <xs:attribute name="startSide" type="sideType"/>
    <xs:attribute name="finishSide" type="sideType"/>
    <xs:attribute name="unit">
        <xs:simpleType>
            <xs:restriction base="xs:token">
                <xs:enumeration value="absoluteSecond"/>
                <xs:enumeration value="absoluteMinute"/>
                <xs:enumeration value="absoluteHour"/>
                <xs:enumeration value="absoluteDay"/>
                <xs:enumeration value="absoluteWeek"/>
                <xs:enumeration value="absoluteMonth"/>
                <xs:enumeration value="absoluteYear"/>
                <xs:enumeration value="relativeDay"/>
                <xs:enumeration value="relativeHour"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="propositionComparitor">
        <xs:simpleType>
            <xs:restriction base="xs:token">
                <xs:enumeration value="AllPropositionIntervalComparator"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="finishGranularity" type="granularityType">
        <xs:annotation>
            <xs:documentation>The granularity (year, month, ...) with which to interpret the finish date/time.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="startGranularity" type="granularityType">
        <xs:annotation>
            <xs:documentation>The granularity (year, month, ...) with which to interpret the start.</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute default="true" name="trueOutput" type="xs:string"/>
    <xs:attribute default="false" name="falseOutput" type="xs:string"/>
    <xs:complexType name="columnSpecType">
        <xs:annotation>
            <xs:documentation>Describes a path from the main table (or a table specified in an enclosing element) to a column which may be in a different table.</xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="1" minOccurs="0">
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>This is used for the identifying a column that is directly contained in a table.</xs:documentation>
                </xs:annotation>
                <xs:element name="columnName" type="nameType">
                    <xs:annotation>
                        <xs:documentation>The name of the column that the enclosing element refers to.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="constraint" maxOccurs="1" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>If the enclosing columnSpec is being used in a context that constrains which rows of a table will be included by generating a boolean expression to be included in a WHILE clause, then the this element must be specified and its value will be the type of comparison to perform (equal, like, greater, ...).</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:token">
                            <xs:enumeration value="equal"/>
                            <xs:enumeration value="like"/>
                            <xs:enumeration value="greater"/>
                            <xs:enumeration value="greaterOfEqual"/>
                            <xs:enumeration value="less"/>
                            <xs:enumeration value="lessOrEqual"/>
                            <xs:enumeration value="notequal"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element minOccurs="0" name="propositionIdToCodeMap">
                    <xs:annotation>
                        <xs:documentation>If present, contains mappings from proposition IDs to database codes.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="propositionIdToCode">
                                <xs:annotation>
                                    <xs:documentation>Maps one proposition ID to one database code.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute ref="propositionID" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The proposition ID to map.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute ref="code" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The code that the proposition ID is mapped to.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element default="false" minOccurs="0" name="propositionIdsComplete"
                    type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates whether the codes in propositionIdToCodeMap represent all of the unique values of the specified column. This serves as an optimization hint to the SQL generator to avoid the need for a long IN clause when the list of values in the clause is known to be almost the same as the list of unique values in the column.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>This is used for a join with another table.  The join is needed to get from the main table to the table that contains the column we are specifying.</xs:documentation>
                </xs:annotation>
                <xs:element name="joinSpec">
                    <xs:annotation>
                        <xs:documentation>Describes the join between the table described by the immediately enclosing columnSpec and the next table in the path described by the outermost enclosing columnSpec.  The table described by the enclosing colummSpec is on the left side of the join. The table described by the enclosed columnSpec is on the right side of the join.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="leftColumnName" type="nameType">
                                <xs:annotation>
                                    <xs:documentation>The column of the table described by the immediately enclosing columnSpec that is to be used in the join.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="rightColumnName" type="nameType">
                                <xs:annotation>
                                    <xs:documentation>The column of the table described by the enclosed columnSpec that is to be used in the join.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="nextColumnSpec" type="columnSpecType">
                                <xs:annotation>
                                    <xs:documentation>Describes the next column in the path described by the outtermost enclosing columnSpec. The table immediately identified by the columnSped will be on the right side of the join described the the immediately enclosing joinSpec.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute default="inner" name="joinType">
                            <xs:annotation>
                                <xs:documentation>Specifies whether this element describes an inner join or a left outter join.</xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:token">
                                    <xs:enumeration value="inner"/>
                                    <xs:enumeration value="leftOuter"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:choice>
        <xs:attribute ref="schemaName">
            <xs:annotation>
                <xs:documentation>The name the relational database schema that contains the table that contains the column identified by this element.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute ref="tableName">
            <xs:annotation>
                <xs:documentation>The name of the table that contains the column identified by this element.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="baseSpecType">
        <xs:annotation>
            <xs:documentation>Represents the path through the database from the key's main table to this entity's main table.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="columnSpecType">
                <xs:attribute ref="columnName">
                    <xs:annotation>
                        <xs:documentation>For those cases where this element contains a joinSpec, this attribute is used to specify the name of the column in the main table that contains the keyID.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="propositionIdType">
        <xs:annotation>
            <xs:documentation>The type for propositionID values.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="nameType"/>
    </xs:simpleType>
    <xs:simpleType name="nameType">
        <xs:annotation>
            <xs:documentation>A non-empty string that can be used to identify something.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:whiteSpace value="preserve"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="javaClassNameType">
        <xs:annotation>
            <xs:documentation>A string that is the fully qualified name of a Java class.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:whiteSpace value="preserve"/>
            <xs:pattern value="[$A-Za-z_][$A-Za-z_0-9]*(\.[$A-Za-z_][$A-Za-z_0-9]*)*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="granularityType">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="second"/>
            <xs:enumeration value="minute"/>
            <xs:enumeration value="hour"/>
            <xs:enumeration value="day"/>
            <xs:enumeration value="month"/>
            <xs:enumeration value="year"/>
            <xs:enumeration value="relativeDay"/>
            <xs:enumeration value="relativeHour"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="filePathType">
        <xs:annotation>
            <xs:documentation>A string that identifies a file.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="sideType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="START"/>
            <xs:enumeration value="FINISH"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="dateTimeFilterType">
        <xs:annotation>
            <xs:documentation>Filter for a date/time range</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="filterType">
                <xs:attribute name="start" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The start time for the interval that will be accepted by the described filter.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute ref="startGranularity"/>
                <xs:attribute name="finish" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>The finish time for the interval that will be accepted by the described filter.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute ref="finishGranularity"/>
                <xs:attribute ref="startSide"/>
                <xs:attribute ref="finishSide"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="positionFilterType">
        <xs:annotation>
            <xs:documentation>A filter for a position range.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="filterType">
                <xs:attribute name="start" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>The start of the interval that will be accepted by the described filter.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute ref="startGranularity"/>
                <xs:attribute name="finish" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>The finish of the interval that will be accepted by the described filter.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute ref="finishGranularity"/>
                <xs:attribute ref="startSide"/>
                <xs:attribute ref="finishSide"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="filterType">
        <xs:annotation>
            <xs:documentation>Common structure for filters.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="propositionIDs">
                <xs:annotation>
                    <xs:documentation>The proposition IDs that this filter applies to.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="durationType">
        <xs:annotation>
            <xs:documentation>The length of a time span.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="length" type="xs:int"/>
        <xs:attribute ref="unit"/>
    </xs:complexType>
    <xs:complexType name="propertyValueFilterType">
        <xs:complexContent>
            <xs:extension base="filterType">
                <xs:sequence>
                    <xs:group ref="valueGroup"/>
                </xs:sequence>
                <xs:attribute ref="propertyName" use="required">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">The name of the property whose value is to be compared.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="comparitor" use="required" type="comparitorType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="propertyValuesFilterType">
        <xs:complexContent>
            <xs:extension base="filterType">
                <xs:sequence>
                    <xs:group ref="valueListGroup"/>
                </xs:sequence>
                <xs:attribute ref="propertyName" use="required">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">The name of the property whose value is to be compared.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute use="required" name="comparitor" type="listComparitorType">
                    <xs:annotation>
                        <xs:documentation>The comparison to make between the named property in the specified propositions and the given values.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:group name="valueListGroup">
        <xs:choice>
            <xs:element maxOccurs="unbounded" minOccurs="1" ref="booleanValue"/>
            <xs:element maxOccurs="unbounded" minOccurs="1" ref="dateValue"/>
            <xs:element maxOccurs="unbounded" minOccurs="1" ref="nominalValue"/>
            <xs:element maxOccurs="unbounded" ref="numberValue"/>
            <xs:element maxOccurs="unbounded" ref="incomparableNumberValue"/>
        </xs:choice>
    </xs:group>
    <xs:group name="valueGroup">
        <xs:annotation>
            <xs:documentation>Elements that represent specific types of literal values.</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element ref="booleanValue"/>
            <xs:element ref="dateValue"/>
            <xs:element ref="nominalValue"/>
            <xs:element ref="numberValue"/>
            <xs:element ref="incomparableNumberValue"/>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="listComparitorType">
        <xs:restriction base="xs:Name">
            <xs:enumeration value="in"/>
            <xs:enumeration value="notIn"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="comparitorType">
        <xs:restriction base="xs:Name">
            <xs:enumeration value="greater"/>
            <xs:enumeration value="less"/>
            <xs:enumeration value="equal"/>
            <xs:enumeration value="notEqual"/>
            <xs:enumeration value="greaterOrEqual"/>
            <xs:enumeration value="lessOrEqual"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
